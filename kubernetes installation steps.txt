## Now Install Kubernetes(Kubeadm)
apt-get update && apt-get install -y apt-transport-https ca-certificates curl software-properties-common
apt-get update && apt-get install -y docker.io
systemctl enable docker.service
docker --version
#apt-get update && apt-get install -y apt-transport-https curl

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
	
apt-get update && apt-get install -y kubelet kubeadm kubectl

systemctl daemon-reload && systemctl restart kubelet

#Install POD Network --- MASTER NODE only WITH at least 2 cpus

Calico--> kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address=$(hostname -i)
Flannel-> kubeadm init --apiserver-advertise-address=$(hostname -i) --pod-network-cidr=10.244.0.0/16

----------------------------------------------------------------
Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.64.60:6443 --token lk3wg1.0cywm02z7xauovqs \
    --discovery-token-ca-cert-hash sha256:f30553444716c075d2ee08f904a408cd210507fba7134659bc7b75a777071762




----------------------------------------------------------------------------
kubectl rollout undo deployment/london-bridge --to-revision=3

--
Calico
-------
kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml

Flannel: 
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml